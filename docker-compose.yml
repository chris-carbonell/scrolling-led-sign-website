# # Overview
# set up website, database, and API

version: '3.7'

name: ${PROJECT_NAME}  # project name (aka stack)

services:

  # # db
  # database
  # * login with:<br>
  # `docker exec -it ${CONTAINER_NAME} psql -d ${POSTGRES_DB} -U ${POSTGRES_USER} -W`
  # * once in `psql`, quit with `\q`
  db:
    build: ./db  # build with `docker-compose build`

    container_name: ${PROJECT_NAME}-db

    restart: always

    ports:
      - "5432:${POSTGRES_PORT}"
    
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    
    volumes:
      - ./db/data:/var/lib/postgresql/data

    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 10s
      timeout: 3s
      retries: 3

  # # app
  # fastui frontend and fastapi backend for interacting with database
  app:
    build: ./app  # build with `docker-compose build`
    command: uvicorn main:app --host=0.0.0.0 --reload

    container_name: ${PROJECT_NAME}-app

    depends_on:
      - db

    env_file:
      - .env

    ports:
      - ${PORT_APP}:8000

    volumes:
      - ./app:/usr/src/app

    healthcheck:
      test: curl http://localhost:${PORT_APP}/healthcheck || exit 1
      # TODO: can pytest be used here instead?
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 2m